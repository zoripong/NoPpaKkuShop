#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NoPpaKkuShop.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="NoPpaKku")]
	public partial class LRegisterPrdDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 확장성 메서드 정의
    partial void OnCreated();
    partial void InsertTRegisterPrd(TRegisterPrd instance);
    partial void UpdateTRegisterPrd(TRegisterPrd instance);
    partial void DeleteTRegisterPrd(TRegisterPrd instance);
    #endregion
		
		public LRegisterPrdDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["NoPpaKkuConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LRegisterPrdDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LRegisterPrdDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LRegisterPrdDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LRegisterPrdDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TRegisterPrd> TRegisterPrd
		{
			get
			{
				return this.GetTable<TRegisterPrd>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRegisterPrd")]
	public partial class TRegisterPrd : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _uniqueID;
		
		private string _productName;
		
		private int _userUniqueID;
		
		private int _amount;
		
		private int _price;
		
		private int _optionUniqueID;
		
		private string _explain;
		
		private int _beforeCharge;
		
		private int _afterCharge;
		
		private string _fileName;
		
		private string _hddName;
		
		private System.DateTime _startDate;
		
		private System.DateTime _endDate;
		
    #region 확장성 메서드 정의
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuniqueIDChanging(int value);
    partial void OnuniqueIDChanged();
    partial void OnproductNameChanging(string value);
    partial void OnproductNameChanged();
    partial void OnuserUniqueIDChanging(int value);
    partial void OnuserUniqueIDChanged();
    partial void OnamountChanging(int value);
    partial void OnamountChanged();
    partial void OnpriceChanging(int value);
    partial void OnpriceChanged();
    partial void OnoptionUniqueIDChanging(int value);
    partial void OnoptionUniqueIDChanged();
    partial void OnexplainChanging(string value);
    partial void OnexplainChanged();
    partial void OnbeforeChargeChanging(int value);
    partial void OnbeforeChargeChanged();
    partial void OnafterChargeChanging(int value);
    partial void OnafterChargeChanged();
    partial void OnfileNameChanging(string value);
    partial void OnfileNameChanged();
    partial void OnhddNameChanging(string value);
    partial void OnhddNameChanged();
    partial void OnstartDateChanging(System.DateTime value);
    partial void OnstartDateChanged();
    partial void OnendDateChanging(System.DateTime value);
    partial void OnendDateChanged();
    #endregion
		
		public TRegisterPrd()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uniqueID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int uniqueID
		{
			get
			{
				return this._uniqueID;
			}
			set
			{
				if ((this._uniqueID != value))
				{
					this.OnuniqueIDChanging(value);
					this.SendPropertyChanging();
					this._uniqueID = value;
					this.SendPropertyChanged("uniqueID");
					this.OnuniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productName", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string productName
		{
			get
			{
				return this._productName;
			}
			set
			{
				if ((this._productName != value))
				{
					this.OnproductNameChanging(value);
					this.SendPropertyChanging();
					this._productName = value;
					this.SendPropertyChanged("productName");
					this.OnproductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userUniqueID", DbType="Int NOT NULL")]
		public int userUniqueID
		{
			get
			{
				return this._userUniqueID;
			}
			set
			{
				if ((this._userUniqueID != value))
				{
					this.OnuserUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._userUniqueID = value;
					this.SendPropertyChanged("userUniqueID");
					this.OnuserUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Int NOT NULL")]
		public int amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int NOT NULL")]
		public int price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_optionUniqueID", DbType="Int NOT NULL")]
		public int optionUniqueID
		{
			get
			{
				return this._optionUniqueID;
			}
			set
			{
				if ((this._optionUniqueID != value))
				{
					this.OnoptionUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._optionUniqueID = value;
					this.SendPropertyChanged("optionUniqueID");
					this.OnoptionUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_explain", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string explain
		{
			get
			{
				return this._explain;
			}
			set
			{
				if ((this._explain != value))
				{
					this.OnexplainChanging(value);
					this.SendPropertyChanging();
					this._explain = value;
					this.SendPropertyChanged("explain");
					this.OnexplainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_beforeCharge", DbType="Int NOT NULL")]
		public int beforeCharge
		{
			get
			{
				return this._beforeCharge;
			}
			set
			{
				if ((this._beforeCharge != value))
				{
					this.OnbeforeChargeChanging(value);
					this.SendPropertyChanging();
					this._beforeCharge = value;
					this.SendPropertyChanged("beforeCharge");
					this.OnbeforeChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_afterCharge", DbType="Int NOT NULL")]
		public int afterCharge
		{
			get
			{
				return this._afterCharge;
			}
			set
			{
				if ((this._afterCharge != value))
				{
					this.OnafterChargeChanging(value);
					this.SendPropertyChanging();
					this._afterCharge = value;
					this.SendPropertyChanged("afterCharge");
					this.OnafterChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fileName", DbType="NVarChar(256)")]
		public string fileName
		{
			get
			{
				return this._fileName;
			}
			set
			{
				if ((this._fileName != value))
				{
					this.OnfileNameChanging(value);
					this.SendPropertyChanging();
					this._fileName = value;
					this.SendPropertyChanged("fileName");
					this.OnfileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hddName", DbType="NVarChar(256)")]
		public string hddName
		{
			get
			{
				return this._hddName;
			}
			set
			{
				if ((this._hddName != value))
				{
					this.OnhddNameChanging(value);
					this.SendPropertyChanging();
					this._hddName = value;
					this.SendPropertyChanged("hddName");
					this.OnhddNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startDate", DbType="Date NOT NULL")]
		public System.DateTime startDate
		{
			get
			{
				return this._startDate;
			}
			set
			{
				if ((this._startDate != value))
				{
					this.OnstartDateChanging(value);
					this.SendPropertyChanging();
					this._startDate = value;
					this.SendPropertyChanged("startDate");
					this.OnstartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endDate", DbType="Date NOT NULL")]
		public System.DateTime endDate
		{
			get
			{
				return this._endDate;
			}
			set
			{
				if ((this._endDate != value))
				{
					this.OnendDateChanging(value);
					this.SendPropertyChanging();
					this._endDate = value;
					this.SendPropertyChanged("endDate");
					this.OnendDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
